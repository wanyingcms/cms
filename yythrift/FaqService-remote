#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import TSSLSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from com.lexjishu.thrift.yy import FaqService
from com.lexjishu.thrift.yy.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print('')
  print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] function [arg1 [arg2...]]')
  print('')
  print('Functions:')
  print('  string addThemeClass( tgroups)')
  print('   findThemeClass()')
  print('  string addTheme(Theme theme)')
  print('  string updateTheme(Theme theme)')
  print('  Theme findThemeById(string tid)')
  print('   findTheme(string className,  ugroups, string userName, i32 page, i32 cou)')
  print('  string hideTheme(string tid, i32 hide)')
  print('  string addQuestion(Question ques)')
  print('  string editQuestion(Question ques)')
  print('  Question findQuestionByID(string qid)')
  print('   findQuestion(i32 hide, string name, string describe, string theme, string qid, string uid, i64 ansStop, i64 publishStart, i64 publishEnd, i64 ansStart, i64 shareNum, i64 shareEnd, string usergroup, i32 userType, i32 page, i32 cou)')
  print('  string addAnswer(Answer answer)')
  print('  string editAnswer(Answer anwer)')
  print('   findAnswer(string qid, string aid, string context, string quesType, i32 fr, i32 to, i32 page, i32 cou)')
  print('  string hideAnswer(string aid, i32 hide)')
  print('  Answer findAnswerByID(string aid)')
  print('  string hideQuestion(string qid, i32 hide)')
  print('  string editTheme(Theme theme)')
  print('   findAnsQues(i32 utype, string anscon, string aid, string ansuname, string ansuid, string quescon, string qid, i32 sortType, string sorta, string sortz,  ugroup, i32 start, i32 count)')
  print('')
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
  ssl = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSSLSocket.TSSLSocket(host, port, validate=False) if ssl else TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = FaqService.Client(protocol)
transport.open()

if cmd == 'addThemeClass':
  if len(args) != 1:
    print('addThemeClass requires 1 args')
    sys.exit(1)
  pp.pprint(client.addThemeClass(eval(args[0]),))

elif cmd == 'findThemeClass':
  if len(args) != 0:
    print('findThemeClass requires 0 args')
    sys.exit(1)
  pp.pprint(client.findThemeClass())

elif cmd == 'addTheme':
  if len(args) != 1:
    print('addTheme requires 1 args')
    sys.exit(1)
  pp.pprint(client.addTheme(eval(args[0]),))

elif cmd == 'updateTheme':
  if len(args) != 1:
    print('updateTheme requires 1 args')
    sys.exit(1)
  pp.pprint(client.updateTheme(eval(args[0]),))

elif cmd == 'findThemeById':
  if len(args) != 1:
    print('findThemeById requires 1 args')
    sys.exit(1)
  pp.pprint(client.findThemeById(args[0],))

elif cmd == 'findTheme':
  if len(args) != 5:
    print('findTheme requires 5 args')
    sys.exit(1)
  pp.pprint(client.findTheme(args[0],eval(args[1]),args[2],eval(args[3]),eval(args[4]),))

elif cmd == 'hideTheme':
  if len(args) != 2:
    print('hideTheme requires 2 args')
    sys.exit(1)
  pp.pprint(client.hideTheme(args[0],eval(args[1]),))

elif cmd == 'addQuestion':
  if len(args) != 1:
    print('addQuestion requires 1 args')
    sys.exit(1)
  pp.pprint(client.addQuestion(eval(args[0]),))

elif cmd == 'editQuestion':
  if len(args) != 1:
    print('editQuestion requires 1 args')
    sys.exit(1)
  pp.pprint(client.editQuestion(eval(args[0]),))

elif cmd == 'findQuestionByID':
  if len(args) != 1:
    print('findQuestionByID requires 1 args')
    sys.exit(1)
  pp.pprint(client.findQuestionByID(args[0],))

elif cmd == 'findQuestion':
  if len(args) != 16:
    print('findQuestion requires 16 args')
    sys.exit(1)
  pp.pprint(client.findQuestion(eval(args[0]),args[1],args[2],args[3],args[4],args[5],eval(args[6]),eval(args[7]),eval(args[8]),eval(args[9]),eval(args[10]),eval(args[11]),args[12],eval(args[13]),eval(args[14]),eval(args[15]),))

elif cmd == 'addAnswer':
  if len(args) != 1:
    print('addAnswer requires 1 args')
    sys.exit(1)
  pp.pprint(client.addAnswer(eval(args[0]),))

elif cmd == 'editAnswer':
  if len(args) != 1:
    print('editAnswer requires 1 args')
    sys.exit(1)
  pp.pprint(client.editAnswer(eval(args[0]),))

elif cmd == 'findAnswer':
  if len(args) != 8:
    print('findAnswer requires 8 args')
    sys.exit(1)
  pp.pprint(client.findAnswer(args[0],args[1],args[2],args[3],eval(args[4]),eval(args[5]),eval(args[6]),eval(args[7]),))

elif cmd == 'hideAnswer':
  if len(args) != 2:
    print('hideAnswer requires 2 args')
    sys.exit(1)
  pp.pprint(client.hideAnswer(args[0],eval(args[1]),))

elif cmd == 'findAnswerByID':
  if len(args) != 1:
    print('findAnswerByID requires 1 args')
    sys.exit(1)
  pp.pprint(client.findAnswerByID(args[0],))

elif cmd == 'hideQuestion':
  if len(args) != 2:
    print('hideQuestion requires 2 args')
    sys.exit(1)
  pp.pprint(client.hideQuestion(args[0],eval(args[1]),))

elif cmd == 'editTheme':
  if len(args) != 1:
    print('editTheme requires 1 args')
    sys.exit(1)
  pp.pprint(client.editTheme(eval(args[0]),))

elif cmd == 'findAnsQues':
  if len(args) != 13:
    print('findAnsQues requires 13 args')
    sys.exit(1)
  pp.pprint(client.findAnsQues(eval(args[0]),args[1],args[2],args[3],args[4],args[5],args[6],eval(args[7]),args[8],args[9],eval(args[10]),eval(args[11]),eval(args[12]),))

else:
  print('Unrecognized method %s' % cmd)
  sys.exit(1)

transport.close()
